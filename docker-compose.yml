services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tracker-app
    volumes:
      - .:/var/www/html
    ports:
      - "9999:9999"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - elasticsearch
    networks:
      - app-network

  db:
    image: mysql:8
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: traffic_tracker
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - app-network

  simulate-clicks:
    build:
      context: ./simulate_clicks
      dockerfile: Dockerfile
    container_name: simulate-clicks
    depends_on:
      - app
    networks:
      - app-network
    ports:
      - "8080:8080"

volumes:
  mysql_data:
  rabbitmq_data:
  elasticsearch_data:

networks:
  app-network: